GET http://localhost:3001/api/users

###

GET http://localhost:3001/api/users/1

###

DELETE http://localhost:3001/api/users/1

###

# Crear usuario
POST http://localhost:3001/api/users
Content-Type: application/json

{
  "name": "User1",
  "username": "user1",
  "passwordHash": "mypass",
  "email": "user1@gmail.com",
  "role": "admin"
}

###

# Crear usuario con username duplicado (debe fallar)
POST http://localhost:3001/api/users
Content-Type: application/json

{
  "name": "Carlos López",
  "username": "admin",
  "passwordHash": "admin1234",
  "email": "carlos@example.com",
  "role": "admin"
}

###

# Obtener usuario inexistente (debe fallar)
GET http://localhost:3001/api/users/99999

###

# Actualizar usuario con datos válidos
PUT http://localhost:3001/api/users/1
Content-Type: application/json

{
  "name": "Updated Name",
  "username": "updatedUsername",
  "email": "updated@example.com",
  "role": "admin",
  "passwordActual": "secret",
  "newPassword": "newSecret123"
}

###

# Intentar actualizar usuario con contraseña incorrecta (debe fallar)
PUT http://localhost:3001/api/users/1
Content-Type: application/json

{
  "name": "New Name",
  "username": "newUsername",
  "email": "new@example.com",
  "role": "admin",
  "passwordActual": "wrongPassword",
  "newPassword": "newSecret123"
}

###

# Intentar eliminar usuario inexistente (debe fallar)
DELETE http://localhost:3001/api/users/99999

###

//SHOPS
# Crear una tienda con datos válidos
POST http://localhost:3001/api/shops
Content-Type: application/json

{
  "ownerId": 4,
  "name": "Tienda de Deportes",
  "description": "Ropa y accesorios deportivos"
}

###

# Obtener todas las tiendas
GET http://localhost:3001/api/shops

###

# Obtener una tienda por su ID (con categorías)
GET http://localhost:3001/api/shops/1

###

# Añadir una categoría a una tienda
POST http://localhost:3001/api/shops/2/categories
Content-Type: application/json

{
  "categoryType": "Audio"
}

###

# Eliminar una categoría de una tienda
DELETE http://localhost:3001/api/shops/1/categories/Accesorios

###

# Crear una tienda con datos inválidos (debe fallar)
POST http://localhost:3001/api/shops
Content-Type: application/json

{
  "name": "Tienda de Zapatos"
}

###

# Obtener una tienda inexistente (debe fallar)
GET http://localhost:3001/api/shops/9999

###

# Eliminar una tienda
DELETE http://localhost:3001/api/shops/2

###

# Eliminar una tienda inexistente (debe fallar)
DELETE http://localhost:3001/api/shops/9999

